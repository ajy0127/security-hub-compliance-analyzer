AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS SecurityHub Compliance Analyzer - A multi-framework analysis tool supporting SOC 2 and NIST 800-53'

Parameters:
  SenderEmail:
    Type: String
    Description: The verified email address that will send compliance reports
    
  RecipientEmail:
    Type: String
    Description: The verified email address that will receive compliance reports

  DefaultFramework:
    Type: String
    Description: The default compliance framework to analyze if none is specified
    Default: SOC2
    AllowedValues:
      - SOC2
      - NIST800-53
      - all

  S3BucketName:
    Type: String
    Description: The S3 bucket containing the Lambda code package
    
  S3KeyName:
    Type: String
    Description: The S3 key (filename) of the Lambda code package
    Default: lambda-code.zip

Resources:
  # IAM Role for Lambda Execution
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonSESFullAccess
      Policies:
        - PolicyName: SecurityHubComplianceAnalyzerPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:ListBucket
                Resource:
                  - !Sub "arn:aws:s3:::${ConfigBucket}"
                  - !Sub "arn:aws:s3:::${ConfigBucket}/*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "arn:aws:logs:*:*:*"
              - Effect: Allow
                Action:
                  - securityhub:GetFindings
                  - securityhub:GetInsights
                  - securityhub:GetInsightResults
                  - securityhub:DescribeProducts
                  - securityhub:DescribeStandards
                  - securityhub:DescribeStandardsControls
                Resource: "*"

  # S3 Bucket for Configuration Files
  ConfigBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::StackName}-configbucket-${AWS::AccountId}"
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  SecurityHubAnalyzer:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${AWS::StackName}-SecurityHubAnalyzer"
      Description: Analyzes AWS SecurityHub findings against compliance frameworks (SOC 2, NIST 800-53)
      Runtime: python3.9
      Handler: src.app.lambda_handler
      Timeout: 300
      MemorySize: 1024
      Role: !GetAtt LambdaExecutionRole.Arn
      Environment:
        Variables:
          SENDER_EMAIL: !Ref SenderEmail
          RECIPIENT_EMAIL: !Ref RecipientEmail
          DEFAULT_FRAMEWORK: !Ref DefaultFramework
          CONFIG_BUCKET: !Ref ConfigBucket
          BEDROCK_MODEL_ID: anthropic.claude-3-sonnet
      Code:
        S3Bucket: !Ref S3BucketName
        S3Key: !Ref S3KeyName

  # EventBridge Rule for Weekly Analysis
  WeeklyAnalysisSchedule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub "${AWS::StackName}-WeeklyAnalysisSchedule"
      Description: "Triggers weekly compliance analysis every Monday at 9 AM UTC"
      ScheduleExpression: "cron(0 9 ? * MON *)"
      State: ENABLED
      Targets:
        - Arn: !GetAtt SecurityHubAnalyzer.Arn
          Id: "WeeklyAnalysisTarget"
          Input: !Sub |
            {
              "email": "${RecipientEmail}",
              "framework": "${DefaultFramework}",
              "hours": 168
            }

  # Permission for EventBridge to Invoke Lambda
  PermissionForEventsToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref SecurityHubAnalyzer
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: !GetAtt WeeklyAnalysisSchedule.Arn

Outputs:
  SecurityHubAnalyzerFunction:
    Description: "Lambda function for SecurityHub compliance analysis"
    Value: !Ref SecurityHubAnalyzer
  
  ConfigBucketName:
    Description: "S3 bucket for configuration files"
    Value: !Ref ConfigBucket
  
  WeeklySchedule:
    Description: "EventBridge rule for weekly analysis"
    Value: !Ref WeeklyAnalysisSchedule