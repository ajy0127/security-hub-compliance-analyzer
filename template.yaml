AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: AWS SecurityHub SOC 2 Analyzer - Maps findings to SOC 2 controls and sends email reports

Parameters:
  SenderEmail:
    Type: String
    Default: ''
    Description: Email address to send reports from (must be verified in SES)
  
  RecipientEmail:
    Type: String
    Default: ''
    Description: Email address to send reports to
  
  FindingsHours:
    Type: String
    Default: '24'
    Description: Number of hours to look back for findings
  
  BedrockModelId:
    Type: String
    Default: anthropic.claude-3-sonnet
    Description: Amazon Bedrock model ID to use for analysis
  
  ImageRepository:
    Type: String
    Description: ECR repository for the Docker image
    Default: ''
    
  S3BucketName:
    Type: String
    Description: S3 bucket name where the Lambda code is stored
    Default: ''
    MinLength: 1

Conditions:
  UseLocalImage: !Equals [!Ref ImageRepository, '']
  UseContainerImage: !Not [!Equals [!Ref ImageRepository, '']]
  UseCustomS3Bucket: !Not [!Equals [!Ref S3BucketName, '']]

Resources:
  # Explicit Log Group for main function
  SecurityHubAnalyzerLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${AWS::StackName}-SecurityHubAnalyzer"
      RetentionInDays: 30

  # Lambda function - Zip packaging
  SecurityHubAnalyzerFunctionZip:
    Type: AWS::Serverless::Function
    Condition: UseLocalImage
    DependsOn: SecurityHubAnalyzerLogGroup
    Properties:
      PackageType: Zip
      CodeUri: 
        Bucket: !Ref S3BucketName
        Key: lambda-code.zip
      Handler: app.lambda_handler
      Runtime: python3.12
      MemorySize: 256
      Timeout: 300
      Description: Analyzes SecurityHub findings and generates SOC 2 compliance reports
      FunctionName: !Sub "${AWS::StackName}-SecurityHubAnalyzer"
      Environment:
        Variables:
          SENDER_EMAIL: !Ref SenderEmail
          RECIPIENT_EMAIL: !Ref RecipientEmail
          BEDROCK_MODEL_ID: !Ref BedrockModelId
          FINDINGS_HOURS: !Ref FindingsHours
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - securityhub:GetFindings
                - securityhub:BatchImportFindings
                - securityhub:BatchUpdateFindings
              Resource: '*'
            - Effect: Allow
              Action:
                - ses:SendEmail
                - ses:SendRawEmail
              Resource: '*'
            - Effect: Allow
              Action:
                - bedrock:InvokeModel
              Resource: '*'
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: 'arn:aws:logs:*:*:*'
  
  # Lambda function - Container packaging
  SecurityHubAnalyzerFunctionContainer:
    Type: AWS::Serverless::Function
    Condition: UseContainerImage
    DependsOn: SecurityHubAnalyzerLogGroup
    Properties:
      PackageType: Image
      ImageUri: !Sub "${ImageRepository}:latest"
      MemorySize: 256
      Timeout: 300
      Description: Analyzes SecurityHub findings and generates SOC 2 compliance reports
      FunctionName: !Sub "${AWS::StackName}-SecurityHubAnalyzer"
      Environment:
        Variables:
          SENDER_EMAIL: !Ref SenderEmail
          RECIPIENT_EMAIL: !Ref RecipientEmail
          BEDROCK_MODEL_ID: !Ref BedrockModelId
          FINDINGS_HOURS: !Ref FindingsHours
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - securityhub:GetFindings
                - securityhub:BatchImportFindings
                - securityhub:BatchUpdateFindings
              Resource: '*'
            - Effect: Allow
              Action:
                - ses:SendEmail
                - ses:SendRawEmail
              Resource: '*'
            - Effect: Allow
              Action:
                - bedrock:InvokeModel
              Resource: '*'
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: 'arn:aws:logs:*:*:*'

  # Weekly Schedule
  WeeklyAnalysisSchedule:
    Type: AWS::Events::Rule
    Properties:
      Description: Triggers the SecurityHub SOC 2 analyzer weekly on Monday 9 AM UTC
      ScheduleExpression: cron(0 9 ? * MON *)
      State: ENABLED
      Targets:
        - Arn: !If 
            - UseLocalImage
            - !GetAtt SecurityHubAnalyzerFunctionZip.Arn
            - !GetAtt SecurityHubAnalyzerFunctionContainer.Arn
          Id: SecurityHubAnalyzerTarget

  # Permission for EventBridge
  WeeklyAnalysisPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !If 
        - UseLocalImage
        - !Ref SecurityHubAnalyzerFunctionZip
        - !Ref SecurityHubAnalyzerFunctionContainer
      Principal: events.amazonaws.com
      SourceArn: !GetAtt WeeklyAnalysisSchedule.Arn

  # Permission for Config
  LambdaUpdateRulePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !If 
        - UseLocalImage
        - !Ref SecurityHubAnalyzerFunctionZip
        - !Ref SecurityHubAnalyzerFunctionContainer
      Principal: config.amazonaws.com

Outputs:
  SecurityHubAnalyzerFunctionArn:
    Description: ARN of the SecurityHub Analyzer Lambda function
    Value: !If 
      - UseLocalImage
      - !GetAtt SecurityHubAnalyzerFunctionZip.Arn
      - !GetAtt SecurityHubAnalyzerFunctionContainer.Arn
  
  SecurityHubAnalyzerFunctionName:
    Description: Name of the SecurityHub Analyzer Lambda function
    Value: !If 
      - UseLocalImage
      - !Ref SecurityHubAnalyzerFunctionZip
      - !Ref SecurityHubAnalyzerFunctionContainer
  
  SecurityHubAnalyzerLogGroupName:
    Description: Name of the CloudWatch Log Group for the Lambda function
    Value: !Ref SecurityHubAnalyzerLogGroup