AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: AWS SecurityHub SOC 2 Compliance Analyzer

Parameters:
  RecipientsConfig:
    Type: String
    Description: JSON configuration for report recipients and frequencies
    Default: |
      {
        "recipients": [
          {
            "email": "default@example.com",
            "frequency": "weekly",
            "report_type": ["detailed", "summary"]
          }
        ]
      }

  FindingsHours:
    Type: Number
    Default: 24
    Description: Number of hours to look back for findings

  BedrockModelId:
    Type: String
    Default: anthropic.claude-3-sonnet
    Description: Amazon Bedrock model ID to use for analysis

Globals:
  Function:
    Runtime: python3.12
    Timeout: 300
    MemorySize: 256
    Environment:
      Variables:
        FINDINGS_HOURS: !Ref FindingsHours
        BEDROCK_MODEL_ID: !Ref BedrockModelId
        RECIPIENTS_CONFIG: !Ref RecipientsConfig

Resources:
  SecurityHubAnalyzerFunction:
    Type: AWS::Serverless::Function
    DependsOn: SecurityHubAnalyzerLogGroup
    Properties:
      CodeUri: src/
      Handler: handlers.securityhub_handler.lambda_handler
      Description: Analyzes SecurityHub findings and generates SOC 2 compliance reports
      AutoPublishAlias: live
      DeploymentPreference:
        Type: AllAtOnce
        Hooks:
          PreTraffic: !Ref PreTrafficHook
      Environment:
        Variables:
          FUNCTION_VERSION: "Live"  # This will be updated during deployment
      
  # Function version reference for tracking in environment variables
  SecurityHubAnalyzerFunctionVersion:
    Type: Custom::LambdaVersion
    DependsOn: 
      - VersionFunction 
      - VersionFunctionLogGroup
    Properties:
      ServiceToken: !GetAtt VersionFunction.Arn
      FunctionName: !Ref SecurityHubAnalyzerFunction
  
  # Explicit Log Group for Version Function to avoid race conditions
  VersionFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${AWS::StackName}-VersionFunction"
      RetentionInDays: 30

  # Lambda function to create a static version identifier
  VersionFunction:
    Type: AWS::Serverless::Function
    DependsOn: VersionFunctionLogGroup
    Properties:
      CodeUri: src/
      Handler: lambda.version_handler.lambda_handler
      Runtime: python3.12
      Timeout: 30
      FunctionName: !Sub "${AWS::StackName}-VersionFunction"
      Environment:
        Variables:
          FUNCTION_NAME: !Ref SecurityHubAnalyzerFunction
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - lambda:PublishVersion
                - lambda:GetFunctionConfiguration
              Resource: !GetAtt SecurityHubAnalyzerFunction.Arn
            # CloudWatch Logs permissions
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*'
              
  # Explicit Log Group for PreTrafficHook function
  PreTrafficHookLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${AWS::StackName}-PreTrafficHook"
      RetentionInDays: 30

  # Pre-traffic test function
  PreTrafficHook:
    Type: AWS::Serverless::Function
    DependsOn: PreTrafficHookLogGroup
    Properties:
      CodeUri: src/
      Handler: lambda.pretraffic_hook.lambda_handler
      Runtime: python3.12
      Timeout: 60
      FunctionName: !Sub "${AWS::StackName}-PreTrafficHook"
      Environment:
        Variables:
          FUNCTION_NAME: !Ref SecurityHubAnalyzerFunction
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - lambda:InvokeFunction
                - codedeploy:PutLifecycleEventHookExecutionStatus
              Resource: '*'
            # CloudWatch Logs permissions
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*'
              
            # SES permissions - limited to verified email addresses
            - Effect: Allow
              Action:
                - ses:SendRawEmail
              Resource: !Sub 'arn:aws:ses:${AWS::Region}:${AWS::AccountId}:identity/*'
              
            # Bedrock permissions - limited to specific model
            - Effect: Allow
              Action:
                - bedrock:InvokeModel
              Resource: !Sub 'arn:aws:bedrock:${AWS::Region}::foundation-model/${BedrockModelId}'
              
            # SSM Parameter permissions - limited to specific parameter
            - Effect: Allow
              Action:
                - ssm:GetParameter
              Resource: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/securityhub/recipients'

  # Weekly Schedule
  WeeklyAnalysisSchedule:
    Type: AWS::Events::Rule
    Properties:
      Description: Weekly SecurityHub SOC 2 analysis
      ScheduleExpression: cron(30 5 ? * MON *)
      State: ENABLED
      Targets:
        - Arn: !GetAtt SecurityHubAnalyzerFunction.Arn
          Id: WeeklyAnalysis
          Input: !Sub |
            {
              "frequency": "weekly"
            }

  # Bi-Weekly Schedule
  BiWeeklyAnalysisSchedule:
    Type: AWS::Events::Rule
    Properties:
      Description: Bi-weekly SecurityHub SOC 2 analysis
      ScheduleExpression: cron(30 5 ? * MON/2 *)
      State: ENABLED
      Targets:
        - Arn: !GetAtt SecurityHubAnalyzerFunction.Arn
          Id: BiWeeklyAnalysis
          Input: !Sub |
            {
              "frequency": "biweekly"
            }

  # Monthly Schedule
  MonthlyAnalysisSchedule:
    Type: AWS::Events::Rule
    Properties:
      Description: Monthly SecurityHub SOC 2 analysis
      ScheduleExpression: cron(30 5 1 * ? *)
      State: ENABLED
      Targets:
        - Arn: !GetAtt SecurityHubAnalyzerFunction.Arn
          Id: MonthlyAnalysis
          Input: !Sub |
            {
              "frequency": "monthly"
            }

  # EventBridge Permissions
  WeeklySchedulePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref SecurityHubAnalyzerFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt WeeklyAnalysisSchedule.Arn

  BiWeeklySchedulePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref SecurityHubAnalyzerFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt BiWeeklyAnalysisSchedule.Arn

  MonthlySchedulePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref SecurityHubAnalyzerFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt MonthlyAnalysisSchedule.Arn

  # Recipients Configuration Parameter
  RecipientsParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /securityhub/recipients
      Type: String
      Value: !Ref RecipientsConfig
      Description: Configuration for SecurityHub report recipients and frequencies

  SecurityHubAnalyzerLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${SecurityHubAnalyzerFunction}
      RetentionInDays: 30

Outputs:
  SecurityHubAnalyzerFunctionArn:
    Description: ARN of the SecurityHub Analyzer Lambda function
    Value: !GetAtt SecurityHubAnalyzerFunction.Arn
    
  SecurityHubAnalyzerFunctionName:
    Description: Name of the SecurityHub Analyzer Lambda function
    Value: !Ref SecurityHubAnalyzerFunction

  RecipientsParameterName:
    Description: SSM Parameter name for recipients configuration
    Value: !Ref RecipientsParameter

  SecurityHubAnalyzerLogGroupName:
    Description: Name of the CloudWatch Log Group for the Lambda function
    Value: !Ref SecurityHubAnalyzerLogGroup 
    
  SecurityHubAnalyzerVersion:
    Description: Current version of the Lambda function
    Value: !Ref SecurityHubAnalyzerFunctionVersion