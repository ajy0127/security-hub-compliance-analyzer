name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -r requirements.txt
        pip install cfn-lint
    - name: Configure Git
      run: |
        git config --global user.email "you@example.com"
        git config --global user.name "Your Name"
    - name: Run tests
      run: |
        python -m pytest tests/ --cov=src/ --cov-report=xml
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -r requirements.txt
    - name: Configure Git
      run: |
        git config --global user.email "you@example.com"
        git config --global user.name "Your Name"
    - name: Run linters
      run: |
        python -m flake8 src/
        python -m black --check src/
        python -m mypy src/
        
  cfn-lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -r requirements.txt
    - name: Configure Git
      run: |
        git config --global user.email "you@example.com"
        git config --global user.name "Your Name"
    - name: Install cfn-lint
      run: pip install cfn-lint
    - name: Run cfn-lint
      run: |
        cfn-lint template.yaml 