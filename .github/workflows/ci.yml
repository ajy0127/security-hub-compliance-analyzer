name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m venv venv
          source venv/bin/activate
          pip install --retries 5 --timeout 60 -r requirements.txt
          pip install --retries 5 --timeout 60 pytest pytest-cov
          
      - name: Run tests
        run: |
          source venv/bin/activate
          pytest tests/ --cov=. --cov-report=xml
          
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m venv venv
          source venv/bin/activate
          pip install --retries 5 --timeout 60 flake8 black isort
          
      - name: Lint with flake8
        run: |
          source venv/bin/activate
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=venv/,build/,dist/,*.egg-info/
          
      - name: Check formatting with black
        run: |
          source venv/bin/activate
          black --check . --exclude="/(\.git|\.hg|\.mypy_cache|\.nox|\.tox|\.venv|_build|buck-out|build|dist|venv)/"
          
      - name: Check imports with isort
        run: |
          source venv/bin/activate
          isort --check-only --profile black . --skip venv --skip .git

  build-and-deploy:
    needs: [test, lint]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          
      - name: Deploy with SAM
        run: |
          python -m venv deploy-venv
          source deploy-venv/bin/activate
          pip install aws-sam-cli
          
          # Create AWS credentials file with proper profile
          mkdir -p ~/.aws
          cat > ~/.aws/credentials << EOF
          [default]
          aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region=${{ secrets.AWS_REGION }}
          EOF
          
          # Deploy using SAM CLI
          sam deploy --template-file template.yaml \
            --stack-name securityhub-soc2-analyzer \
            --capabilities CAPABILITY_IAM \
            --parameter-overrides \
              ImageRepository=${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:latest \
            --no-fail-on-empty-changeset 