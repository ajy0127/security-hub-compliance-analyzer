name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m venv venv
          source venv/bin/activate
          pip install --retries 5 --timeout 60 -r src/requirements.txt
          pip install --retries 5 --timeout 60 pytest pytest-cov
          
      - name: Run tests
        run: |
          source venv/bin/activate
          pytest src/tests/ --cov=src --cov-report=xml
          
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./src/coverage.xml
          fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m venv venv
          source venv/bin/activate
          pip install --retries 5 --timeout 60 flake8 black isort cfn-lint
          
      - name: Lint with flake8
        run: |
          source venv/bin/activate
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=venv/,build/,dist/,*.egg-info/
          
      - name: Check formatting with black
        run: |
          source venv/bin/activate
          black --check ./src ./scripts --exclude="/(\.git|\.hg|\.mypy_cache|\.nox|\.tox|\.venv|_build|buck-out|build|dist|venv)/"
          
      - name: Check imports with isort
        run: |
          source venv/bin/activate
          isort --check-only --profile black ./src ./scripts --skip venv --skip .git
          
      - name: Validate CloudFormation template
        run: |
          source venv/bin/activate
          cfn-lint deployment/cloudformation.yaml
